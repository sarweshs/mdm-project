# mdm-bot-core/src/main/resources/application.properties
# Database Configuration
#spring.datasource.url=jdbc:postgresql://mdm_postgres_db:5432/mdm_db
spring.datasource.url=jdbc:postgresql://localhost:5432/mdm_db
spring.datasource.username=mdmuser
spring.datasource.password=mdm_password
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
# 'update' creates/updates schema based on entities. Use 'validate' or 'none' for production.
spring.jpa.show-sql=true
 # Log SQL statements
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Server Port
server.port=8081
# This service will run on port 8081

# WebClient Base URL for mdm-global-rules service
# In a production setup, this would typically be a service discovery name
# (e.g., using Eureka, Consul, Kubernetes service names).
# For Docker Compose, the service name 'mdm-global-rules' is used as the hostname.
#mdm.global-rules.base-url=http://mdm-global-rules:8080
mdm.global-rules.base-url=http://localhost:8080

# Logging Configuration (optional, for more detailed logs)
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.kie.api=DEBUG
# Enable Drools API logging
logging.level.org.drools=DEBUG
 # Enable Drools internal logging
